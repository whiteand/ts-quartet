// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`v() v('quartet') 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === \\"quartet\\"
}",
  },
}
`;

exports[`v() v('quartetquartetquartetquartetquartetquartetquartetquartetquartetquartetquartet') 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
    "validString": "quartetquartetquartetquartetquartetquartetquartetquartetquartetquartetquartet",
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === ctx.memory.validString
}",
  },
}
`;

exports[`v() v(0/0) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return Number.isNaN(value)
}",
  },
}
`;

exports[`v() v(42) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
    "validNumber": 42,
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === ctx.memory.validNumber
}",
  },
}
`;

exports[`v() v(Symbol.for('quartet')) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
    "validSymbol": Symbol(quartet),
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === ctx.memory.validSymbol
}",
  },
}
`;

exports[`v() v(false) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === false
}",
  },
}
`;

exports[`v() v(null) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === null
}",
  },
}
`;

exports[`v() v(true) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === true
}",
  },
}
`;

exports[`v() v(undefined) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return value === undefined
}",
  },
}
`;

exports[`v() v(v.any) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return true
}",
  },
}
`;

exports[`v() v(v.array) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return Array.isArray(value)
}",
  },
}
`;

exports[`v() v(v.boolean) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return typeof value === 'boolean'
}",
  },
}
`;

exports[`v() v(v.finite) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return Number.isFinite(value)
}",
  },
}
`;

exports[`v() v(v.never) 1`] = `
Object {
  "code": "function (value) {
        return ctx.pure(value, ctx);
    }",
  "explanations": Array [],
  "memory": Object {
    "pathToValueId": Array [],
  },
  "pure": Object {
    "code": "function anonymous(value,ctx
) {
return false
}",
  },
}
`;
